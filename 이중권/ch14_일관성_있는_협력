# 객체지향 설계의 목표는 적절한 책임을 수행하는 객체들의 협력을 기반으로 결합도가 낮고 재사용 가능한 코드 구조를 창조하는 것

## 일관성있는 설계를 만드는 방법
- 다양한 설계 경험을 익히는 것
- 널리 알려진 디자인 패턴을 학습하고 변경이라는 문맥안에서 디자인 패턴을 적용해보는 것

## 변경을 처리하는 방법
절차지향 프로그래밍 : 조건문의 분기를 추가하여 개별 분기 로직을 수정
객체지향 프로그래밍 : 조건 로직을 객체 사이의 이동으로 변경

## 일관성 있는 협력을 위한 지침
1. 변하는 개념과 변하지 않는 개념을 분리
2. 변하는 개념을 캡슐화

## 캡슐화
- 캡슐화란 단순히 데이터를 감추는 것이 아니라, 소트트웨어 안에서 변할 수 있는 `개념`을 감추는 것
- 변경을 캡슐화할 수 있는 다양한 방법이 존재하지만, 협력을 일관성 있게 만들기 위한 일반적인 방법은 서브타입 캡슐화와 객체 캡슐화를 조합하는 것이다.
- 일관성 있는 협력의 핵심은 변경을 분리하고 캡슐화하는 것
